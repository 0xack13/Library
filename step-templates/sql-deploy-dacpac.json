{
  "Id": "ActionTemplates-12",
  "Name": "SQL - Deploy DACPAC",
  "Description": "Deploys a DACPAC to a target database. Expects the SSDT tools to be installed on the C: drive.",
  "ActionType": "Octopus.Script",
  "Version": 3,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'\n\n$ssdtPathFormat = 'C:\\Program Files (x86)\\Microsoft Visual Studio {0}.0\\Common7\\IDE\\Extensions\\Microsoft\\SQLDB\\DAC\\120'\n$vsVersions = @( '14', '12', '11' )\n\nfunction Validate-Argument($name, $value) {\n    if (!$value) {\n        throw 'Missing required parameter ''{0}''.' -f $name\n    }\n\n    return $value\n}\n\nfunction Load-DacAssembly {\n    Write-Verbose 'Attempting to discover SSDT install folder...'\n    \n    $result = $vsVersions | foreach { $ssdtPathFormat -f $_ } | where { Test-Path $_ } | select -first 1\n    \n    if (!$result) {\n        throw 'SSDT not found. Install the latest SSDT to continue.'\n    }\n\n    Write-Verbose 'Found SSDT folder, attempting to load DAC assembly...'\n    Add-Type -Path ($result + '\\Microsoft.SqlServer.Dac.dll')\n        \n    Write-Verbose 'Loaded DAC assembly.'\n}\n\n#\n# Script\n#\n\n# Get arguments\n$dacpacPackageStepName = Validate-Argument 'DACPAC Package Step Name' $OctopusParameters['DacpacPackageStepName']\n$dacpacName = Validate-Argument 'DACPAC Name' $OctopusParameters['DacpacName']\n$targetConnectionString = Validate-Argument 'Target Connection String' $OctopusParameters['TargetConnectionString']\n$targetDatabaseName = Validate-Argument 'Target Database Name' $OctopusParameters['TargetDatabaseName']\n\n$profileName = $OctopusParameters['ProfileName']\n\n# Load the DAC assembly\nLoad-DacAssembly\n\n# Set .NET CurrentDirectory to package installation path\n$installDirPathFormat = 'Octopus.Action[{0}].Output.Package.InstallationDirectoryPath' -f $dacpacPackageStepName\n$installDirPath = $OctopusParameters[$installDirPathFormat]\n\nWrite-Verbose ('Setting CurrentDirectory to ''{0}''' -f $installDirPath)\n[System.Environment]::CurrentDirectory = $installDirPath\n\n# Load DacPackage\n$dacPackage = [Microsoft.SqlServer.Dac.DacPackage]::Load($dacpacName + '.dacpac')\n\n# Setup DacProfile\nif ($profileName) {\n    $dacProfile = [Microsoft.SqlServer.Dac.DacProfile]::Load($profileName)\n    Write-Host ('Loaded publish profile ''{0}''.' -f $profileName)\n} else {\n    $dacProfile = New-Object Microsoft.SqlServer.Dac.DacProfile\n}\n\n# Setup DacServices\n$dacServices = New-Object Microsoft.SqlServer.Dac.DacServices -ArgumentList $targetConnectionString\n\n$progressChangedEvent = \"ProgressChanged\"\nRegister-ObjectEvent $dacServices $progressChangedEvent -SourceIdentifier $progressChangedEvent -Action { Write-Verbose ('DacServices: {0}' -f $EventArgs.Message) } | Out-Null\n\n# Deploy package\ntry {\n    Write-Host 'Starting DACPAC deployment...'\n    $dacServices.Deploy($dacPackage, $targetDatabaseName, $true, $dacProfile.DeployOptions, $null)\n    Write-Host 'Deployment succeeded!'\n} catch [Microsoft.SqlServer.Dac.DacServicesException] {\n    Unregister-Event -SourceIdentifier $progressChangedEvent\n    throw ('Deployment failed: ''{0}'' Reason: ''{1}''' -f $_.Exception.Message, $_.Exception.InnerException.Message)\n}"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "DacpacPackageStepName",
      "Label": "DACPAC Package Step Name",
      "HelpText": "The step in which the DACPAC package was installed.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      }
    },
    {
      "Name": "DacpacName",
      "Label": "DACPAC Name",
      "HelpText": "Name of the .dacpac file, without the .dacpac extension.",
      "DefaultValue": null,
      "DisplaySettings": {}
    },
    {
      "Name": "TargetConnectionString",
      "Label": "Target Connection String",
      "HelpText": "Connection string of the target datababse server.",
      "DefaultValue": null,
      "DisplaySettings": {}
    },
    {
      "Name": "TargetDatabaseName",
      "Label": "Target Database Name",
      "HelpText": "Name of the target database the DACPAC should be deployed to.",
      "DefaultValue": null,
      "DisplaySettings": {}
    },
    {
      "Name": "ProfileName",
      "Label": "Profile Name",
      "HelpText": "Optional: name of the publish profile XML file.",
      "DefaultValue": null,
      "DisplaySettings": {}
    }
  ],
  "LastModifiedBy": "mlowijs",
  "$Meta": {
    "ExportedAt": "2015-08-12T20:41:54.427Z",
    "OctopusVersion": "3.0.10.2278",
    "Type": "ActionTemplate"
  }
}
