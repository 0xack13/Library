{
  "Id": "ActionTemplates-99",
  "Name": "New Relic - Complete Deployment",
  "Description": "Notifies [New Relic](https://newrelic.com) of a deployment.\nSends the revision/version number, deployer, etc from the Octopus deployment.",
  "ActionType": "Octopus.Script",
  "Version": 12,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "Add-Type -AssemblyName System.Web\n\n$apiKey = $OctopusParameters['ApiKey']\n$user = $OctopusParameters['User']\n$appId = $OctopusParameters['AppId']\n\n#http://docs.octopusdeploy.com/display/OD/System+variables\n$releaseNumber = $OctopusParameters['Octopus.Release.Number']\n$releaseNotes = $OctopusParameters['Octopus.Release.Notes']\n$machineName = $OctopusParameters['Octopus.Machine.Name']\n$projectName = $OctopusParameters['Octopus.Project.Name']\n$deploymentLink = $OctopusParameters['Octopus.Web.DeploymentLink']\n\n## --------------------------------------------------------------------------------------\n## Helpers\n## --------------------------------------------------------------------------------------\n# Helper for validating input parameters\nfunction Validate-Parameter([string]$value, [string[]]$validInput, $parameterName) {\n    Write-Host \"${parameterName}: $value\"\n    if (! $value) {\n        throw \"No value was set for $parameterName, and it cannot be empty\"\n    }\n    \n    if ($validInput) {\n        if (! $validInput -contains $value) {\n            throw \"'$input' is not a valid input for '$parameterName'\"\n        }\n    }\n}\n\n## --------------------------------------------------------------------------------------\n## Configuration\n## --------------------------------------------------------------------------------------\nValidate-Parameter $apiKey -parameterName \"Api Key\"\nValidate-Parameter $user -parameterName \"User\"\n\nif (!$appId) {\n    Write-Host \"NewRelic Deploy - AppId has not been set yet. Skipping call to API.\"\n    exit 0\n}\n\nWrite-Host \"App ID: $appId\"\n\n# encode the variables for the post\n$user = [System.Web.HttpUtility]::UrlEncode($user)\n$description = [System.Web.HttpUtility]::UrlEncode(\"Octopus deployment of $projectName to $machineName. ($deploymentLink)\")\n$releaseNumber = [System.Web.HttpUtility]::UrlEncode($releaseNumber)\n$releaseNotes = [System.Web.HttpUtility]::UrlEncode($releaseNotes)\n\n$url = \"http://api.newrelic.com/deployments.xml\"\n\n$headers = @{\"x-api-key\"=\"$apiKey\"}\n\n$body = @{\"&deployment[user]\"=$user;\n        \"&deployment[application_id]\"=$appId;\n        \"&deployment[description]\"=$description;\n        \"&deployment[revision]\"=$releaseNumber;\n        \"&deployment[changelog]\"=$releaseNotes}\n\ntry {\n    $response = invoke-RestMethod -Uri $url -Header $headers -Body $body -Method post\n    Write-Host $response\n} catch [System.Net.WebException] {\n    Write-Host \"NewRelic Deploy - API called failed. Exception: $($_.Exception.Message)\" \n    exit 1\n}",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "ApiKey",
      "Label": "Api Key",
      "HelpText": "Your New Relic API key.",
      "DefaultValue": null,
      "DisplaySettings": {}
    },
    {
      "Name": "User",
      "Label": "User",
      "HelpText": "The name of the user/process that triggered this deployment.",
      "DefaultValue": null,
      "DisplaySettings": {}
    },
    {
      "Name": "AppId",
      "Label": "App ID",
      "HelpText": "The ID of the application in New Relic RPM.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2016-02-15T20:58:00.202+00:00",
  "LastModifiedBy": "ScottLusk",
  "$Meta": {
    "ExportedAt": "2016-02-15T20:53:11.202Z",
    "OctopusVersion": "3.0.21.0",
    "Type": "ActionTemplate"
  }
}
